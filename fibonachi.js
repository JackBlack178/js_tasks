const createFibArray = (n) => {
    const res = [1, 1]

    while(n !== res.length){
        let value = res[res.length - 1] + res[res.length-2]
        res.push(value)
    }
    return res
}

const memoCreateFibArray = () => {
    const array = [1, 1]
    return  (n) => {
        if (n < 3)
            return array.slice(0, n)

        if (n < array.length)
            return array.slice(0, n)


        while(n !== array.length){
            let value = array[array.length - 1] + array[array.length-2]
            array.push(value)

        }
        return array
    }
}


const fib = memoCreateFibArray()


console.log(fib(1)); // [1], первый элемент последовательности
console.log(fib(2)); // [1, 1], два первых элемента последовательности
console.log(fib(3)); // [1, 1, 2], три первых элемента последовательности
console.log(fib(5)); // [1, 1, 2, 3, 5], пять первых элементов
console.log(fib(10)); // [1, 1, 2, 3, 5, 8, 13, 21, 34, 55], десять первых элементов
console.log('----------------------------------------------------------------------------')
// Проверка на повторное использование кэшированных данных
console.log(fib(5)); // [1, 1, 2, 3, 5], должно вернуть тот же массив без дополнительных вычислений
console.log('----------------------------------------------------------------------------')

// Проверка на расширение последовательности
console.log(fib(7)); // [1, 1, 2, 3, 5, 8, 13], должно добавить новые элементы, используя кэш
console.log('----------------------------------------------------------------------------')

// Проверка на запрос меньшей последовательности после увеличенной
console.log(fib(3)); // [1, 1, 2], должно вернуть первые три элемента, используя кэш
console.log('----------------------------------------------------------------------------')

// Проверка на работу с большим числом
console.log(fib(15)); // [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], пятнадцать элементов
console.log('----------------------------------------------------------------------------')

// Проверка на корректное кэширование: запрос меньшего количества после большего
console.log(fib(8)); // [1, 1, 2, 3, 5, 8, 13, 21], кэш должен сохранять правильную последовательность
console.log(fib(20)); // Должен правильно продолжить последовательность из кэша до двадцати элементов
console.log('----------------------------------------------------------------------------')

// Тест на повторный вызов с тем же значением
console.log(fib(20)); // Должен вернуть то же самое значение без вычисления новых элементов
console.log('----------------------------------------------------------------------------')
